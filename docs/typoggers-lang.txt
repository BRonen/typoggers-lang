-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/bronen/typoggers-lang#readme</a>
@package typoggers-lang
@version 0.1.0.0

module Lexer
data Token
TokenLet :: Token
TokenType :: Token
TokenTypeof :: Token
TokenIn :: Token
TokenInt :: Integer -> Token
TokenBool :: Bool -> Token
TokenString :: String -> Token
TokenLiteral :: String -> Token
TokenQuote :: Token
TokenFatArrow :: Token
TokenArrow :: Token
TokenEq :: Token
TokenPlus :: Token
TokenMinus :: Token
TokenTimes :: Token
TokenDiv :: Token
TokenOB :: Token
TokenCB :: Token
TokenColon :: Token
TokenOr :: Token
TokenAnd :: Token
TokenPipe :: Token
TokenAmpersand :: Token
TokenIf :: Token
TokenThen :: Token
TokenElse :: Token
lexer :: String -> [Token]
instance GHC.Show.Show Lexer.Token

module Parser
parse :: [Token] -> SExpr
data Token
TokenLet :: Token
TokenType :: Token
TokenTypeof :: Token
TokenIn :: Token
TokenInt :: Integer -> Token
TokenBool :: Bool -> Token
TokenString :: String -> Token
TokenLiteral :: String -> Token
TokenQuote :: Token
TokenFatArrow :: Token
TokenArrow :: Token
TokenEq :: Token
TokenPlus :: Token
TokenMinus :: Token
TokenTimes :: Token
TokenDiv :: Token
TokenOB :: Token
TokenCB :: Token
TokenColon :: Token
TokenOr :: Token
TokenAnd :: Token
TokenPipe :: Token
TokenAmpersand :: Token
TokenIf :: Token
TokenThen :: Token
TokenElse :: Token
data SExpr
SLet :: String -> SExpr -> SExpr -> SExpr -> SExpr
SLetInfer :: String -> SExpr -> SExpr -> SExpr
STypeAlias :: String -> SExpr -> SExpr -> SExpr
SDef :: String -> SExpr -> SExpr -> SExpr -> SExpr
SDefInfer :: String -> SExpr -> SExpr -> SExpr
SConditional :: SExpr -> SExpr -> SExpr -> SExpr
SApp :: SExpr -> SExpr -> SExpr
SPlus :: SExpr -> SExpr -> SExpr
SMinus :: SExpr -> SExpr -> SExpr
STimes :: SExpr -> SExpr -> SExpr
SDiv :: SExpr -> SExpr -> SExpr
SAnd :: SExpr -> SExpr -> SExpr
SOr :: SExpr -> SExpr -> SExpr
SString :: String -> SExpr
SInt :: Integer -> SExpr
SName :: String -> SExpr
SBool :: Bool -> SExpr
SBrack :: SExpr -> SExpr
SType :: String -> SExpr
STypeof :: SExpr -> SExpr
STypeUnion :: SExpr -> SExpr -> SExpr
STypeIntersection :: SExpr -> SExpr -> SExpr
STypeFunc :: SExpr -> SExpr -> SExpr
instance GHC.Show.Show Parser.SExpr
instance GHC.Base.Functor Parser.HappyIdentity
instance GHC.Base.Applicative Parser.HappyIdentity
instance GHC.Base.Monad Parser.HappyIdentity

module Checker
data TypeValue
checker :: SExpr -> Either String TypeValue
instance GHC.Show.Show Checker.TypeValue
instance GHC.Classes.Eq Checker.TypeValue

module Backend.Eval
eval :: SExpr -> IO (Either String Value)
instance GHC.Show.Show Backend.Eval.Value
